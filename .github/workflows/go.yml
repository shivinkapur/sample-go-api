# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
  pull_request:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    if: 
      success() && contains('refs/heads/main', github.ref)
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: github.com/shivinkapur/sample-go-api

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version-file: "github.com/shivinkapur/sample-go-api/go.mod"
          cache: true
          cache-dependency-path: github.com/shivinkapur/sample-go-api/go.sum
        env:
          GOPATH: /home/runner/work/sample-go-api/

      - name: Debug
        run: |
          pwd
          ls -lart
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}

      - name: Build
        run: |
            cd github.com/shivinkapur/sample-go-api
            mkdir -p ./bin
            ./build.sh
        env:
          GOPATH: /home/runner/work/sample-go-api/
  
  test:
    name: Test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: github.com/shivinkapur/sample-go-api

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version-file: "github.com/shivinkapur/sample-go-api/go.mod"
          cache: true
          cache-dependency-path: github.com/shivinkapur/sample-go-api/go.sum
        env:
          GOPATH: /home/runner/work/sample-go-api/
  

      - name: Debug
        run: |
          pwd
          ls -lart
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}

      - name: Test
        run: |
            cd github.com/shivinkapur/sample-go-api
            go clean -testcache && GIN_MODE=release go test -v -count=1 -cover -parallel=1 ./...
        env:
          GOPATH: /home/runner/work/sample-go-api/

  package:
    name: Build Images
    runs-on: ubuntu-latest
    needs: [build, test]
    if: 
      success() && contains('refs/heads/main', github.ref)
    steps:
      - name: Build Images
        run: |
          pwd
          echo "TODO: Build images"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [package]
    if: 
      success() && contains('refs/heads/main', github.ref)
    steps:
      - name: Deploy to DEV
        run: |
          pwd
          echo "TODO: Deploy container to DEV"